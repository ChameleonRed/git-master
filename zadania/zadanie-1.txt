Zadanie 1

Napisz generator zakresu liczb pierwszych.
Wyświetl kolejno liczby w rzędach.
Każdy rząd powinien zawierać tą samą liczbę liczb.
Liczby pierwsze trzeba oznaczyć gwiazdką na końcu.

Wymagania:

Zarząd przyjmuje, że wystarczy wygenerować liczb do 120.

Nazwij funkcję generującą liczby pierwsze find_primes(maximum_prime).
Funkcja powinna zwracać listę liczb pierwszych.

Nazwij funkcję pokazujacą liczby pierwsze show_primes(primes).
Liczby pierwsze trzeba zaraportować w rzędach po 6 liczb.
Liczby pierwsze oznaczamy "*".
Liczby powinny być rozdzielone spacjami.
Liczby muszą być wyrównane w kolumnach do prawej.
Liczby, które mają mniej znaków muszą być poprzedzone spacjami.

Wyodrębnij moduły: funkcji generującej, wizualizacji oraz programu głównego.
Program główny powinien odwoływać się do modułów funkcji i wizualizacji.

 1  2* 3*  4  5*  6
 7* 8  9  10 11* 12

Taka faktoryzacja pokaże zarządowi rzędy, gdzie jest najwięcej liczb pierwszych.

* Dodatkowo można podsumować ilość liczb w kolumnach dla ułatwienia zarządowi.

 1   2*  3*  4   5*  6
 7*  8   9  10  11* 12
──────────────────────
 1   1   1   0   2   0

Główny programista:
1. Tworzysz gałąź wersji v-1-1.
2. Udostępniasz linka.
3. Tworzysz szkielet programu głównego na gałęzi e-main.
4. Zlecasz napisanie funkcji oraz wizualizacji.
5. Przeglądasz kod napisane funkcji i wizualizacji.
6. Łączysz kod z programem głównym.
7. Uruchamiasz i zgłaszasz błędy zespołowi.
8. Łączysz poprawki od zespołu (nowa rewizja v-1-1-1, v-1-1-2, ...).

Programista funkcji:
1. Klonujesz archiwum z GitHub.
2. Tworzysz gałąź funkcji e-find-primes.
3. Kodujesz i zatwierdzasz kod.
4. Wysyłasz kod na GitHub.
5. Poprawiasz błędy na gałęziach bf-<nazwa-błędu>.

Programista wizualizacji:
1. Klonujesz archiwum z GitHub
2. Tworzysz gałąź funkcji e-find-primes.
3. Kodujesz i zatwierdzasz kod.
4. Wysyłasz kod na GitHub.
5. Poprawiasz błędy na gałęziach bf-<nazwa-błędu>.

Kryteria oceny:
- jakość kodu (nazewnictwo, dokumentacja) (punkty 1-3)
- brak błędów (punkty 1-3)
- poprawne gałęzie (punkty 1-3)
- praca zespołowa w Git (udział całego zespołu) (punkty 1-3)

Główny programista:
* Zapisujesz punkty po ocenie w <nazwa-zespołu>.txt.
* Zatwierdzasz kod.